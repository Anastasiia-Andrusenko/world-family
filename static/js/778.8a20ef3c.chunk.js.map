{"version":3,"file":"static/js/778.8a20ef3c.chunk.js","mappings":"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","sources":["../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/js/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.3.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = timestamp - startTime;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = time >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const finish = () => {\n        animationDriver && animationDriver.stop();\n        playState = \"finished\";\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            const timeInMs = secondsToMilliseconds(newTime);\n            if (holdTime !== null || !animationDriver) {\n                holdTime = timeInMs;\n            }\n            else {\n                startTime = animationDriver.now() - timeInMs;\n            }\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n            animationDriver = undefined;\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return animation.finished.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        play: () => animation.play(),\n        pause: () => animation.pause(),\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            time: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: Promise.resolve,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get time() {\n        return this.animations[0].time;\n    }\n    /**\n     * time assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set time(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].time = time;\n        }\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.3.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.3.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","this","isMounted","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","updateFinishedPromise","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","finish","play","reject","newTime","timeInMs","pause","sample","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","finished","currentTime","setWithVelocity","createInstantAnimation","delayBy","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","GroupPlaybackControls","onResolve","onReject","catch","methodName","runAll","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_superPropBase","property","getPrototypeOf","_get","Reflect","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}